{"version":3,"sources":["../../src/pages/chat-conversa/chat-conversa.module.ts","../../src/pages/chat-conversa/chat-conversa.ts","../../src/models/mensagem.ts","../../src/models/usuario.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ChatConversaPage } from './chat-conversa';\n\n@NgModule({\n  declarations: [\n    ChatConversaPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ChatConversaPage),\n  ],\n})\nexport class ChatConversaPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat-conversa/chat-conversa.module.ts","import { Mensagem } from './../../models/mensagem';\nimport { StorageProvider } from './../../providers/storage/storage';\nimport { ConversasProvider } from './../../providers/conversas/conversas';\nimport { SocketProvider } from './../../providers/socket/socket';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { Conversa } from '../../models/conversa';\nimport { Usuario } from '../../models/usuario';\nimport { UsuarioProvider } from '../../providers/usuario/usuario';\n\n/**\n * Generated class for the ChatConversaPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-chat-conversa',\n  templateUrl: 'chat-conversa.html',\n  providers: [StorageProvider]\n})\nexport class ChatConversaPage {\n  topico: string = '/topic/mensagens/conversa/'\n  usuario: Usuario = new Usuario();\n  conversa: Conversa = new Conversa();\n  mensagens: Mensagem[];\n  inputMsg: Mensagem = new Mensagem();\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public socketProvider: SocketProvider,\n    public conversasProvider: ConversasProvider,\n    public storage: StorageProvider,\n    public usuarioProvider: UsuarioProvider) { }\n\n  async ionViewDidLoad() {\n    if (this.navParams.get('conversa')) {\n      this.conversa = this.navParams.get('conversa');\n\n      this.topico += this.conversa.id;\n      this.inputMsg.conteudo = '';\n\n      this.subscribeTopic();\n      try {\n        this.usuario = await this.storage._.get(this.storage.USUARIO)\n        if (!this.usuario) {\n          this.usuarioProvider.getUsuario(4).subscribe((usuario: any) => {\n            this.usuario = usuario;\n            this.storage._.set(this.storage.USUARIO, usuario);\n          }, err => this.navCtrl.setRoot('ListaConversasPage'));\n        }\n\n        this.inputMsg.autor = this.usuario;\n        this.inputMsg.chat = this.conversa;\n      } catch (err) {\n        console.log(err)\n      }\n    } else {\n      this.navCtrl.setRoot('ListaConversasPage')\n    }\n\n\n  }\n\n  enviarMensagem(conteudo) {\n    this.inputMsg.conteudo = conteudo;\n    this.inputMsg.dataEnvio = new Date();\n    this.socketProvider.send('/app/enviar/mensagens/conversa/' + this.conversa.id, this.inputMsg);\n    this.inputMsg.conteudo = '';\n  }\n\n  async subscribeTopic() {\n    await this.getPreviousMessages();\n    this.socketProvider.subscribe(this.topico, (mensagem) => this.mensagemRecebida(mensagem))\n  }\n\n  mensagemRecebida(data) {\n    const res = JSON.parse(data.body);\n    if (res.conteudo != null) {\n      this.mensagens.push(res)\n    } else if (res.recebido != null) {\n      this.mensagens.forEach(mensagem => {\n        if (mensagem.id == res.id) {\n          mensagem.listaRecebidos.push(res)\n        }\n      })\n    } else {\n      console.log('nao Ã© de tipo nenhum:', res)\n    }\n  }\n\n  getPreviousMessages() {\n    return this.conversasProvider.getUltimasMensagens(this.conversa.id)\n      .subscribe((mensagens: any) => {\n        this.mensagens = mensagens;\n      })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat-conversa/chat-conversa.ts","import { Conversa } from './conversa';\nimport { Usuario } from './usuario';\nimport { Recebido } from './recebido';\nexport class Mensagem {\n    constructor(\n        public id?: number,\n        public conteudo?: string,\n        public dataEnvio?: Date,\n        public autor?: Usuario,\n        public chat?: Conversa,\n        public listaRecebidos?: Recebido[]\n    ) { }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/mensagem.ts","export class Usuario {\n    constructor(\n        public id?: number,\n        public email?: string,\n        public emailConfirmado?: boolean,\n        public nome?: string,\n        public ultimoAcesso?: Date,\n        public prioridade?: number,\n        public selecionado?: boolean,\n    ) { }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/usuario.ts"],"sourceRoot":""}